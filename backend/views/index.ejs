<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link href="/css/index.css" rel="stylesheet" type="text/css" />
    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
      integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
      integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
      crossorigin="anonymous"
    ></script>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />
  </head>
  <body>
    <nav class="navbar">
      <div class="heading">
        <h2><span style="color: #5ec576">Jeeva</span>ndan</h2>
      </div>
    </nav>

    <section class="section" id="section--1">
      <div class="section__title">
        <h1 className="landingh1">
          <span class="highlight">Congratulations </span>
          <span>&nbsp;For</span>
          <span class="highlight"> Registering</span>
          As
          <span class="highlight"> Donor</span>
        </h1>
        <h2 class="section__description">
          Now You are only 1 step away from completing your regsitration as
          Donor
        </h2>
        <h3 class="section__header"></h3>
      </div>
    </section>

    <%= console.log(hosp_address) %> <%= console.log(list) %>
    <p class="paragraph-white-centered">
      Click on the Button Below to Complete your all regsitration steps
    </p>
    <button
      class="btn btn-outline-dark"
      style="font-size: 20px; border-radius: 20px"
      type="submit"
      data-id="<%= id%>"
      data-hosp_address="<%= hosp_address%>"
      data-list="<%= list%>"
      id="approveButton"
    >
      APPROVE
    </button>

    <script src="https://cdn.jsdelivr.net/npm/web3@1.5.3/dist/web3.min.js"></script>
    <script
      src="https://cdn.ethers.io/scripts/ethers-v4.min.js"
      charset="utf-8"
      type="text/javascript"
    ></script>

    <script type="module">
      var val ;
      fetch('/NFT.json')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Now you have the ABI data
                console.log(data.abi);
                val = data.abi;
                // Use the ABI data as needed in your JavaScript code
                // For example:
                // var contractABI = data.contractABI;
            })
            .catch(error => console.error('Error fetching ABI:', error));

      const id = <%= id %>;
      var list = <%- JSON.stringify(list) %>;

      var hosp_address = [
        <% hosp_address.forEach(function(addresss) { %>
          "<%= addresss %>",
        <% }); %>
      ];

      console.log(hosp_address);

      const web3Provider = new ethers.providers.Web3Provider(window.ethereum);

      async function requestAccounts() {
        try {
          const account = await window.ethereum.request({ method: "eth_requestAccounts" });
          console.log("MetaMask account access granted");
          console.log(account);
        } catch (error) {
          console.error("Error:", error);
        }
      }

      // Listen for button click

      // const tokenId = document.getElementById("approveButton").value;
      document
        .getElementById("approveButton")
        .addEventListener("click", async () => {
          await requestAccounts();
          // console.log(event.target.dataset.id);
          // Contract ABI and address
          const contractABI = val; // ABI of your smart contract
          const contractAddress = "0x5E5b436Da9E53F4677DF2359fCe217c7F846EeB3"; // Address of your smart contract

          // Connect to Ethereum network
          const provider = new ethers.providers.JsonRpcProvider(
            "https://eth-sepolia.g.alchemy.com/v2/fHEDI3zQ_MlbsF1jD11HKt29CUfoSMR0"
          );

          const signer = web3Provider.getSigner();

          // Create contract instance
          const contract = new ethers.Contract(
            contractAddress,
            contractABI,
            signer
          );

          try {
            console.log(list.length);

            console.log(hosp_address)

              for (var i = 0; i < list.length; i++) {
                const num = JSON.parse(list[i])
                const result = await contract.approveTransfer(hosp_address , num); // Call a function without sending a transaction
                console.log("Result:", result);
              }

          } catch (error) {
            console.error("Error:", error);
          }

        });
    </script>
  </body>
</html>
